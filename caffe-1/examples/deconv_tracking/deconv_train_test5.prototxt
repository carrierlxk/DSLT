# fully connected network
name: "TwoflowDeconv"
force_backward: true
input: "exemplar"
input_dim: 60
input_dim: 3
input_dim: 127
input_dim: 127

input: "instance"
input_dim: 60
input_dim: 3
input_dim: 239
input_dim: 239

layer {
  name: "loc_conv1"
  type: "Convolution"
  bottom: "exemplar"
  top: "loc_conv1"
  param {
  name: "conv1_w"
  lr_mult: 1 
  decay_mult: 1
  }
  param {
  name: "conv1_b"
  lr_mult: 2
  decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.00001
    }
  }
}
layer { bottom: "loc_conv1" top: "loc_conv1" name: "loc_conv1-bn" type: "BN"
  bn_param { scale_filler { type: "constant" value: 1 }
             shift_filler { type: "constant" value: 0.001 }
             bn_mode: INFERENCE } }
layer {
  name: "loc_relu1"
  type: "ReLU"
  bottom: "loc_conv1"
  top: "loc_conv1"
}
layer {
  name: "loc_pool1"
  type: "Pooling"
  bottom: "loc_conv1"
  top: "loc_pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "loc_norm1"
  type: "LRN"
  bottom: "loc_pool1"
  top: "loc_norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "loc_conv2"
  type: "Convolution"
  bottom: "loc_norm1"
  top: "loc_conv2"
  param {
  name: "conv2_w"
  lr_mult: 1 
  decay_mult: 1
  }
  param {
  name: "conv2_b"
  lr_mult: 2
  decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 5
    group: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer { bottom: "loc_conv2" top: "loc_conv2" name: "loc_conv2-bn" type: "BN"
  bn_param { scale_filler { type: "constant" value: 1 }
             shift_filler { type: "constant" value: 0.001 }
             bn_mode: INFERENCE } }
layer {
  name: "loc_relu2"
  type: "ReLU"
  bottom: "loc_conv2"
  top: "loc_conv2"
}
layer {
  name: "loc_pool2"
  type: "Pooling"
  bottom: "loc_conv2"
  top: "loc_pool2"
  #top:"loc_pool2_mask" 
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "loc_conv3"
  type: "Convolution"
  bottom: "loc_pool2"
  top: "loc_conv3"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 0
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { bottom: "loc_conv3" top: "loc_conv3" name: "loc_conv3-bn" type: "BN"
  bn_param { scale_filler { type: "constant" value: 1 }
             shift_filler { type: "constant" value: 0.001 }
             bn_mode: INFERENCE } }
layer {
  name: "loc_relu3"
  type: "ReLU"
  bottom: "loc_conv3"
  top: "loc_conv3"
}
layer {
  name: "loc_conv4"
  type: "Convolution"
  bottom: "loc_conv3"
  top: "loc_conv4"
  param {
    name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 0
    kernel_size: 3
    group: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer { bottom: "loc_conv4" top: "loc_conv4" name: "loc_conv4-bn" type: "BN"
  bn_param { scale_filler { type: "constant" value: 1 }
             shift_filler { type: "constant" value: 0.001 }
             bn_mode: INFERENCE } }
layer {
  name: "loc_relu4"
  type: "ReLU"
  bottom: "loc_conv4"
  top: "loc_conv4"
}
layer {
  name: "loc_conv5"
  type: "Convolution"
  bottom: "loc_conv4"
  top: "loc_conv5"
  param {
  name: "conv5_w"
  lr_mult: 1 
  decay_mult: 1
  }
  param {
  name: "conv5_b"
  lr_mult: 2
  decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
#layer {
#  name: "loc_relu5"
#  type: "ReLU"
#  bottom: "loc_conv5"
#  top: "loc_conv5"
#}
################################################################
layer {
  name: "loc_conv1_p"
  type: "Convolution"
  bottom: "instance"
  top: "loc_conv1_p"
  param {
  name: "conv1_w"
  lr_mult: 1
  decay_mult: 1 
  }
  param {
  name: "conv1_b"
  lr_mult: 2
  decay_mult: 0
  }
 convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { bottom: "loc_conv1_p" top: "loc_conv1_p" name: "loc_conv1_p-bn" type: "BN"
  bn_param { scale_filler { type: "constant" value: 1 }
             shift_filler { type: "constant" value: 0.001 }
             bn_mode: INFERENCE } }
layer {
  name: "loc_relu1_p"
  type: "ReLU"
  bottom: "loc_conv1_p"
  top: "loc_conv1_p"
}
layer {
  name: "loc_pool1_p"
  type: "Pooling"
  bottom: "loc_conv1_p"
  top: "loc_pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "loc_norm1_p"
  type: "LRN"
  bottom: "loc_pool1_p"
  top: "loc_norm1_p"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "loc_conv2_p"
  type: "Convolution"
  bottom: "loc_norm1_p"
  top: "loc_conv2_p"
  param {
  name: "conv2_w"
  lr_mult: 1 
  decay_mult: 1
  }
  param {
  name: "conv2_b"
  lr_mult: 2
  decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 5
    group: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer { bottom: "loc_conv2_p" top: "loc_conv2_p" name: "loc_conv2_p-bn" type: "BN"
  bn_param { scale_filler { type: "constant" value: 1 }
             shift_filler { type: "constant" value: 0.001 }
             bn_mode: INFERENCE } }
layer {
  name: "loc_relu2_p"
  type: "ReLU"
  bottom: "loc_conv2_p"
  top: "loc_conv2_p"
}
layer {
  name: "loc_pool2_p"
  type: "Pooling"
  bottom: "loc_conv2_p"
  top: "loc_pool2_p"
  #top: "loc_pool2_p_mask"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "loc_conv3_p"
  type: "Convolution"
  bottom: "loc_pool2_p"
  top: "loc_conv3_p"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 0
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { bottom: "loc_conv3_p" top: "loc_conv3_p" name: "loc_conv3_p-bn" type: "BN"
  bn_param { scale_filler { type: "constant" value: 1 }
             shift_filler { type: "constant" value: 0.001 }
             bn_mode: INFERENCE } }
layer {
  name: "loc_relu3_p"
  type: "ReLU"
  bottom: "loc_conv3_p"
  top: "loc_conv3_p"
}
layer {
  name: "loc_conv4_p"
  type: "Convolution"
  bottom: "loc_conv3_p"
  top: "loc_conv4_p"
  param {
    name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 0
    kernel_size: 3
    group:1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer { bottom: "loc_conv4_p" top: "loc_conv4_p" name: "loc_conv4_p-bn" type: "BN"
  bn_param { scale_filler { type: "constant" value: 1 }
             shift_filler { type: "constant" value: 0.001 }
             bn_mode: INFERENCE } }
layer {
  name: "loc_relu4_p"
  type: "ReLU"
  bottom: "loc_conv4_p"
  top: "loc_conv4_p"
}
layer {
  name: "loc_conv5_p"
  type: "Convolution"
  bottom: "loc_conv4_p"
  top: "loc_conv5_p"
  param {
  name: "conv5_w"
  lr_mult: 1 
  decay_mult: 1
  }
  param {
  name: "conv5_b"
  lr_mult: 2
   decay_mult: 0
  }
  convolution_param {
   
    num_output: 64
    pad: 0
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
#layer {
#  name: "loc_relu5_p"
#  type: "ReLU"
#  bottom: "loc_conv5_p"
#  top: "loc_conv5_p"
#}
#############################################################################
